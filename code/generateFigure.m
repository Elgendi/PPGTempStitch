clear;
close all;
step = 5;
Regular.ppg = [0.464199903892361,0.452186448822680,0.440172993753004,0.428159538683323,0.417107160019222,0.405574243152328,0.392599711677077,0.378183565593464,0.362325804901489,0.345506967803938,0.328207592503606,0.309947140797693,0.292167227294568,0.274387313791448,0.257087938491110,0.240269101393559,0.226814031715521,0.215761653051415,0.203267659778952,0.191254204709276,0.179721287842382,0.169149447381068,0.158577606919750,0.148005766458431,0.137433925997117,0.127823161941374,0.118692936088417,0.109562710235461,0.100913022585297,0.0941854877462779,0.0888995675156162,0.0816914944738096,0.0744834214320030,0.0682364247957713,0.0629505045651144,0.0586256607400276,0.0547813551177331,0.0514175876982210,0.0480538202787139,0.0442095146564144,0.0408457472369073,0.0389235944257575,0.0379625180201826,0.0365209034118204,0.0350792888034581,0.0341182123978833,0.0326765977895258,0.0317155213839509,0.0302739067755887,0.0283517539644389,0.0269101393560767,0.0254685247477192,0.0240269101393569,0.0230658337337821,0.0235463719365696,0.0249879865449318,0.0259490629505067,0.0254685247477192,0.0235463719365696,0.0211436809226323,0.0192215281114826,0.0182604517059127,0.0201826045170574,0.0288322921672264,0.0475732820759265,0.0807304180682347,0.121095627102355,0.171552138395001,0.240749639596347,0.323402210475731,0.413262854396922,0.504084574723688,0.590581451225372,0.668428640076887,0.735223450264296,0.790004805382029,0.832292167227294,0.864488226814032,0.888034598750602,0.901970206631427,0.909658817876021,0.914944738106678,0.916866890917828,0.914944738106678,0.908697741470447,0.898125901009128,0.883229216722727,0.864007688611245,0.840461316674675,0.813551177318594,0.783757808745793,0.754444978375779,0.725612686208552,0.694377703027389,0.663623258049013,0.634310427678999,0.606919750120135,0.582412301777991,0.561268620855358,0.543488707352233,0.528592023065833,0.515617491590582,0.504565112926476,0.494473810667949,0.485343584814993,0.476693897164824,0.467563671311868,0.457952907256124,0.446900528592023,0.434887073522342,0.422393080249879,0.408938010571840,0.395002402691015,0.381066794810189,0.367131186929358,0.353195579048533,0.339740509370494,0.327727054300818,0.314271984622775,0.300336376741949,0.286400768861124,0.272465160980298,0.258529553099472,0.245074483421434,0.232099951946178,0.220086496876502,0.209034118212396,0.197981739548295,0.187409899086976,0.179240749639595,0.172513214800576,0.165305141758769,0.158097068716962,0.151369533877943,0.144641999038924,0.137914464199905,0.131186929360886,0.125420470927437,0.119654012493992,0.114368092263335,0.109562710235461,0.107160019221529,0.105237866410379,0.102835175396442,0.100432484382510,0.0985103315713599,0.0965881787602103,0.0946660259490605,0.0927438731379157,0.0913022585295533,0.0898606439211911,0.0884190293128288,0.0879384911100413,0.0869774147044664,0.0874579529072539,0.0884190293128288,0.0884190293128288,0.0879384911100413,0.0874579529072539,0.0869774147044664,0.0864968765016840,0.0869774147044664,0.0864968765016840,0.0855358000961091,0.0840941854877468,0.0821720326765971,0.0812109562710222,0.0816914944738096,0.0845747236905342,0.0946660259490605,0.115809706871698,0.152330610283518,0.206150888995676,0.276309466602592,0.359923113887552,0.452186448822680,0.546371936568958,0.636713118692936,0.718885151369533,0.781355117731860,0.829889476213357,0.875060067275346,0.913503123498316,0.944257568476692,0.967323402210474,0.983661701105237,0.994233541566555,0.999519461797213,1,0.995675156174913,0.987025468524744,0.974050937049493,0.956751561749155,0.936088419029311,0.911100432484384,0.881787602114365,0.849111004324844,0.813551177318594,0.776549735703986,0.739067755886591,0.702546852474770,0.667467563671312,0.635752042287362,0.607880826525710,0.584814992791928,0.565593464680440,0.547813551177320,0.531475252282557,0.515617491590582,0.500720807304181,0.486304661220568,0.472849591542525,0.459875060067274,0.446900528592023,0.434406535319560,0.421432003844304,0.408938010571840,0.397405093704947,0.383950024026909,0.368572801537721,0.351273426237388,0.333493512734262,0.315713599231137,0.297453147525230,0.280153772224892,0.262854396924554,0.245555021624221,0.229216722729458,0.215761653051415,0.204228736184526,0.191254204709276,0.177799135031232,0.164344065353194,0.151850072080731,0.140797693416625,0.130706391158098,0.121576165305142,0.112926477654973,0.104276790004804,0.0961076405574228,0.0879384911100413,0.0816914944738096,0.0764055742431527,0.0701585776069210,0.0643921191734719,0.0591061989428150,0.0543008169149456,0.0504565112926461,0.0461316674675641,0.0418068236424772,0.0374819798173953,0.0336376741951007,0.0302739067755887,0.0283517539644389,0.0273906775588640,0.0259490629505067,0.0240269101393569,0.0225852955309947,0.0211436809226323,0.0192215281114826,0.0177799135031252,0.0158577606919755,0.0144161460836137,0.0124939932724649,0.0110523786641036,0.00961076405574230,0.0100913022585293,0.0120134550696780,0.0124939932724649,0.0115329168668911,0.0105718404613167,0.00961076405574230,0.0105718404613167,0.0158577606919755,0.0297933685728013,0.0567035079288778,0.0999519461797223,0.160019221528112,0.222969726093227,0.290725612686210,0.373858721768382,0.462758289283998,0.550216242191252,0.630946660259492,0.702066314271983,0.761653051417585,0.809226333493512,0.846708313310907,0.875060067275346,0.895242671792408,0.909178279673234,0.914944738106678,0.915905814512253,0.915425276309466,0.913022585295529,0.906775588659297,0.895723209995196,0.879865449303220,0.859202306583370,0.834214320038444,0.804420951465642,0.771263815473329,0.735703988467084,0.702546852474770,0.671792407496394,0.639596347909656,0.608841902931280,0.580970687169628,0.556463238827484,0.535800096107639,0.518020182604514,0.502642960115331,0.489668428640075,0.478616049975974,0.468044209514655,0.457952907256124,0.448342143200385,0.438731379144642,0.428159538683323,0.416626621816434,0.403652090341183,0.389716482460353,0.374339259971165,0.358481499279194,0.343104276790006,0.328207592503606,0.312349831811630,0.296492071119655,0.283037001441616,0.270543008169148,0.256126862085535,0.241710716001922,0.226814031715521,0.212878423834695,0.199903892359444,0.186448822681401,0.173954829408938,0.162421912542049,0.151369533877943,0.141278231619412,0.131667467563673,0.124939932724649,0.120134550696780,0.115329168668910,0.110043248438249,0.103796251802017,0.0965881787602103,0.0893801057184037,0.0826525708793845,0.0768861124459402,0.0725612686208534,0.0687169629985588,0.0653531955790468,0.0639115809706893,0.0634310427679019,0.0624699663623270,0.0610283517539647,0.0591061989428150,0.0567035079288778,0.0547813551177331,0.0528592023065833,0.0518981259010084,0.0509370494954336,0.0499759730898587,0.0490148966842838,0.0475732820759265,0.0475732820759265,0.0480538202787139,0.0485343584815013,0.0485343584815013,0.0485343584815013,0.0480538202787139,0.0461316674675641,0.0432484382508395,0.0413262854396947,0.0408457472369073,0.0446900528592019,0.0562229697260953,0.0744834214320030,0.103315713599229,0.148486304661219,0.210475732820758,0.287361845266698,0.374339259971165,0.465641518500718,0.555502162421914,0.638635271504086,0.712157616530514,0.775108121095624,0.826045170591062,0.866410379625177,0.893320518981259,0.911100432484384,0.925516578567997,0.936088419029311,0.942815953868330,0.945699183085054,0.944257568476692,0.938491110043248,0.928399807784717,0.913503123498316,0.893801057184046,0.869293608841902,0.843344545891395,0.816434406535318,0.786160499759730,0.753483901970204,0.720807304180683,0.689091782796732,0.658817876021144,0.630946660259492,0.606439211917348,0.585295530994715,0.567035079288803,0.552138395002402,0.539644401729939,0.530033637674195,0.521383950024026,0.511773185968282,0.501201345506969,0.489668428640075,0.477174435367612,0.463238827486786,0.448342143200385,0.432964920711197,0.418068236424797,0.403652090341183,0.388755406054783,0.375300336376740,0.362325804901489,0.347909658817876,0.332532436328688,0.315713599231137,0.299375300336374,0.284478616049974,0.270543008169148,0.257087938491110,0.244113407015859,0.231619413743390,0.219605958673715,0.208073041806821,0.198462277751082,0.190293128303701,0.180682364247957,0.171071600192213,0.161941374339262,0.153772224891880,0.146564151850074,0.139356078808267,0.133109082172031,0.127823161941374,0.122537241710717,0.117731859682843,0.114368092263335,0.111965401249398,0.109082172032679,0.105718404613167,0.103315713599229,0.100913022585297,0.0985103315713599,0.0961076405574228,0.0937049495434906,0.0917827967323408,0.0893801057184037,0.0864968765016840,0.0850552618933217,0.0836136472849593,0.0816914944738096,0.0788082652570900,0.0764055742431527,0.0749639596347905,0.0740028832292156,0.0730418068236407,0.0716001922152834,0.0696780394041336,0.0672753483901964,0.0658337337818341,0.0672753483901964,0.0730418068236407,0.0855358000961091,0.110043248438249,0.149447381066794,0.205670350792889,0.276790004805380,0.358962037481982,0.447861604997598,0.537722248918789,0.623258049014898,0.699663623258046,0.765497357039885,0.813551177318594,0.848630466122057,0.880345987506008,0.906775588659297,0.927438731379142,0.941854877462755,0.951465641518499,0.956271023546373,0.956751561749155,0.952907256126861,0.944738106679480,0.932724651609803,0.916386352715041,0.897645362806340,0.875060067275346,0.847669389716482,0.815473330129743,0.780394041326285,0.743873137914465,0.706871696299857,0.671311869293607,0.638154733301299,0.607400288322923,0.580009610764054,0.555982700624697,0.537241710716002,0.521864488226813,0.507448342143200,0.493993272465162,0.481979817395481,0.469485824123018,0.456991830850554,0.444497837578086,0.431042767900048,0.417107160019222,0.402691013935609,0.387313791446421,0.371456030754445,0.357520422873619,0.344545891398364,0.329168668909176,0.312349831811630,0.295530994714080,0.279192695819317,0.262854396924554,0.246996636232579,0.230177799135033,0.213839500240270,0.198462277751082,0.184046131667469,0.172993753003363,0.163382988947619,0.152811148486306,0.142719846227774,0.133109082172031,0.124459394521867,0.115809706871698,0.107160019221529,0.0985103315713599,0.0903411821239786,0.0821720326765971,0.0744834214320030,0.0672753483901964,0.0624699663623270,0.0586256607400276,0.0543008169149456,0.0509370494954336,0.0475732820759265,0.0442095146564144,0.0408457472369073,0.0374819798173953,0.0297933685728013,0.0197020663142701,0.0134550696780393,0.00961076405574230,0.00816914944738099,0.00768861124459404,0.00720807304180659,0.00672753483901969,0.00624699663623273,0.00528592023065833,0.00384430562229702,0.00240269101393571,0.00144161460836136,0.000961076405574405,0.000961076405574405,0.000961076405574405,0,0.000480538202786957,0.00144161460836136,0.00144161460836136,0.00288322921672267,0.00913022585295534,0.0249879865449318,0.0547813551177331,0.101874098990872,0.165785679961556,0.245555021624221,0.337337818356557,0.434887073522342,0.519461797212876,0.592984142239309,0.666987025468525,0.734262373858721,0.791446419990387,0.837578087457951,0.873137914464201,0.899086977414703,0.917347429120615,0.928880345987504,0.935607880826523,0.937530033637673,0.935127342623736,0.928399807784717,0.917347429120615,0.902931283037002,0.884670831331090,0.861604997597308,0.834214320038444,0.802979336857280,0.768861124459392,0.734262373858721,0.700144161460833,0.666987025468525,0.635271504084574,0.608361364728497,0.585776069197503,0.564151850072078,0.544930321960595,0.527630946660258,0.511773185968282,0.498318116290244,0.486785199423355,0.475732820759249,0.464680442095148];
Irregular.ppg= [0.434743875278398,0.496213808463252,0.551447661469933,0.598663697104676,0.636971046770602,0.666369710467708,0.686414253897551,0.697550111358574,0.700222717149222,0.695768374164809,0.685077951002228,0.669933184855234,0.649888641425390,0.624498886414256,0.594209354120268,0.560801781737195,0.526057906458799,0.490423162583520,0.454788418708242,0.419153674832963,0.383964365256125,0.354120267260578,0.328285077951003,0.302449888641428,0.278396436525613,0.257906458797328,0.240534521158128,0.225389755011138,0.212472160356346,0.201336302895323,0.192427616926502,0.186191536748329,0.180846325167038,0.175946547884189,0.171492204899776,0.167928730512251,0.163474387527838,0.158574610244989,0.152783964365257,0.146102449888642,0.138975501113586,0.131848552338531,0.125612472160357,0.118485523385302,0.110467706013363,0.102895322939866,0.0971046770601344,0.0926503340757217,0.0877505567928723,0.0824053452115816,0.0766146993318496,0.0712694877505590,0.0668151447661463,0.0623608017817381,0.0574610244988887,0.0525612472160347,0.0472160356347441,0.0423162583518947,0.0378619153674820,0.0351893095768389,0.0334075723830738,0.0307349665924262,0.0271714922049006,0.0236080178173704,0.0200445434298448,0.0169265033407559,0.0142538975501129,0.0120267260579066,0.00979955456570014,0.00801781737193966,0.00579064587973334,0.00534521158129206,0.00668151447661581,0.00935412026725896,0.0169265033407559,0.0334075723830738,0.0619153674832968,0.103786191536749,0.159020044543430,0.225835189309575,0.301559020044545,0.380846325167036,0.460579064587973,0.536302895322939,0.596881959910915,0.645434298440982,0.691314031180401,0.729621380846327,0.758574610244992,0.778619153674835,0.789755011135857,0.792427616926505,0.787973273942093,0.776837416481070,0.759465478841869,0.736302895322942,0.711358574610244,0.684187082405345,0.652561247216038,0.616926503340759,0.579510022271715,0.541648106904230,0.504231625835190,0.469487750556794,0.436525612472159,0.406236080178175,0.379510022271717,0.355902004454343,0.334966592427617,0.318930957683741,0.306904231625836,0.295768374164813,0.286414253897551,0.277951002227171,0.270824053452116,0.265478841870825,0.260579064587976,0.256124721603563,0.251670378619155,0.247661469933183,0.243652561247216,0.240089086859686,0.236080178173719,0.230734966592429,0.224498886414256,0.217371937639200,0.210244988864144,0.204008908685971,0.196881959910915,0.189309576837418,0.181737193763921,0.173719376391983,0.166146993318486,0.158574610244989,0.152338530066815,0.146993318485525,0.142093541202671,0.137193763919821,0.132293986636972,0.128730512249442,0.126057906458799,0.122939866369710,0.119376391982184,0.116258351893095,0.112694877505570,0.109131403118040,0.107349665924274,0.106458797327396,0.105122494432073,0.106904231625833,0.109576837416481,0.109576837416481,0.107795100222716,0.104231625835190,0.0988864142538994,0.0930957683741629,0.0868596881959897,0.0810690423162578,0.0775055679287322,0.0752783964365258,0.0721603563474369,0.0685968819599113,0.0654788418708224,0.0619153674832968,0.0596881959910905,0.0592427616926492,0.0623608017817381,0.0717149220489956,0.0904231625835199,0.122494432071269,0.168374164810692,0.217817371937641,0.272160356347439,0.342984409799556,0.423162583518930,0.506458797327392,0.587082405345212,0.661024498886413,0.726057906458797,0.779955456570154,0.821380846325169,0.851224944320712,0.869042316258353,0.876169265033409,0.873942093541203,0.865924276169265,0.851224944320712,0.830734966592427,0.804899777282852,0.773719376391981,0.738530066815143,0.698886414253898,0.656570155902005,0.614253897550111,0.571937639198218,0.530512249443207,0.495322939866370,0.464587973273940,0.432962138084633,0.402672605790645,0.374610244988863,0.349665924276170,0.327394209354120,0.308240534521159,0.292204899777283,0.279287305122495,0.268596881959909,0.260133630289534,0.254342984409798,0.250779510022272,0.247661469933183,0.243207126948775,0.237416481069043,0.230289532293987,0.221826280623608,0.213363028953228,0.204454342984412,0.195991091314032,0.187082405345212,0.178173719376391,0.169710467706011,0.162583518930960,0.156347438752782,0.149220489977726,0.143429844097994,0.141202672605793,0.143875278396436,0.153229398663698,0.171937639198218,0.199109131403117,0.234298440979954,0.275723830734965,0.321603563474388,0.363474387527840,0.402227171492204,0.444097995545656,0.484187082405347,0.518485523385302,0.543875278396436,0.559910913140313,0.566592427616927,0.564810690423162,0.554565701559022,0.537193763919822,0.514476614699331,0.486414253897549,0.458351893095767,0.429398663697103,0.396881959910913,0.362583518930958,0.327394209354120,0.293095768374165,0.260579064587976,0.231180400890870,0.204899777282849,0.181737193763921,0.162583518930960,0.146993318485525,0.135857461024498,0.127839643652559,0.120712694877503,0.114476614699330,0.109576837416481,0.106013363028955,0.103340757238308,0.100668151447660,0.0984409799554581,0.0962138084632518,0.0939866369710455,0.0917594654788436,0.0895322939866373,0.0881959910913135,0.0873051224944310,0.0841870824053467,0.0797327394209340,0.0752783964365258,0.0708240534521177,0.0663697104677050,0.0619153674832968,0.0574610244988887,0.0543429844097998,0.0543429844097998,0.0596881959910905,0.0703786191536764,0.0877505567928723,0.115367483296213,0.154120267260580,0.202672605790647,0.260579064587976,0.324276169265032,0.390645879732740,0.456570155902007,0.518485523385302,0.572828507795101,0.617817371937641,0.652115812917596,0.673051224944322,0.683296213808463,0.685968819599110,0.681514476614702,0.669933184855234,0.651670378619155,0.627171492204899,0.597772828507793,0.564365256124721,0.527839643652560,0.489977728285079,0.450779510022270,0.415590200445433,0.384409799554566,0.351893095768377,0.321158129175947,0.293541202672607,0.269933184855233,0.249888641425390,0.233853006681513,0.221826280623608,0.213363028953228,0.207126948775055,0.203563474387529,0.201781737193764,0.201336302895323,0.201781737193764,0.202227171492206,0.202227171492206,0.201781737193764,0.200890868596882,0.199554565701558,0.196881959910915,0.193318485523385,0.189309576837418,0.184855233853005,0.180400890868597,0.177282850779508,0.174164810690424,0.169710467706011,0.165256124721603,0.160801781737195,0.156347438752782,0.151893095768374,0.147884187082407,0.144766146993318,0.142538975501112,0.140311804008910,0.138084632516704,0.135857461024498,0.134521158129178,0.134521158129178,0.134075723830737,0.132739420935413,0.130957683741648,0.128730512249442,0.126503340757240,0.124276169265034,0.122048997772827,0.119821826280625,0.117594654788419,0.115367483296213,0.114476614699330,0.114031180400889,0.112249443207128,0.109576837416481,0.107349665924274,0.105122494432073,0.102895322939866,0.100668151447660,0.0988864142538994,0.0975501113585757,0.0957683741648105,0.0935412026726042,0.0922048997772849,0.0904231625835199,0.0873051224944310,0.0837416481069054,0.0801781737193752,0.0766146993318496,0.0726057906458782,0.0685968819599113,0.0645879732739445,0.0628062360801794,0.0650334075723812,0.0752783964365258,0.0971046770601344,0.126503340757240,0.167037861915368,0.227616926503340,0.304231625835188,0.393318485523387,0.489977728285079,0.587973273942094,0.681069042316261,0.766146993318484,0.839643652561248,0.899777282850778,0.945657015590202,0.974610244988866,0.990200445434297,0.999109131403117,1,0.993318485523386,0.980400890868598,0.960801781737196,0.934966592427616,0.903340757238308,0.866369710467706,0.804899777282852,0.730512249443210,0.669933184855234,0.620044543429843,0.577728285077950,0.535857461024498,0.495768374164811,0.457906458797326,0.423608017817371,0.393318485523387,0.367037861915366,0.343875278396438,0.323385300668153,0.306013363028953,0.292204899777283,0.281959910913138,0.273942093541204,0.265478841870825,0.256124721603563,0.246325167037864,0.237416481069043,0.228953229398664,0.220044543429843,0.210244988864144,0.200445434298441,0.191091314031178,0.181291759465480,0.171492204899776,0.163919821826279,0.157683741648106,0.150111358574609,0.142538975501112,0.134075723830737,0.124276169265034,0.114922048997771,0.106458797327396,0.0993318485523407,0.0926503340757217,0.0859688195991072,0.0797327394209340,0.0748329621380846,0.0708240534521177,0.0659242761692637,0.0601336302895318,0.0538975501113585,0.0476614699331853,0.0414253897550121,0.0356347438752802,0.0307349665924262,0.0262806236080180,0.0218262806236099,0.0178173719376385,0.0133630289532303,0.0106904231625827,0.00890868596881767,0.00579064587973334,0.00222717149220500,0,0.00133630289532289,0.00890868596881767,0.0253897550111355,0.0530066815144760,0.0922048997772849,0.143429844097994,0.205790645879731,0.265478841870825,0.324721603563473,0.391091314031181,0.457906458797326,0.520267260579063,0.575055679287307,0.619153674832961,0.652115812917596,0.673942093541205,0.684632516703786,0.685968819599110,0.679287305122496,0.665924276169267,0.648997772828508,0.628507795100223,0.602672605790647,0.572383073496659,0.538975501113587,0.502895322939867,0.465924276169264,0.428507795100225,0.391536748329622,0.355456570155902,0.321158129175947,0.289532293986635,0.264142538975501,0.243207126948775,0.223162583518932,0.206236080178173,0.191982182628061,0.179955456570156,0.171046770601335,0.164365256124721,0.159020044543430,0.154120267260580,0.149665924276168,0.145211581291760,0.141648106904234,0.139420935412028,0.137193763919821,0.133630289532296,0.130066815144766,0.126057906458799,0.121603563474386,0.115367483296213,0.108685968819598,0.102449888641425,0.0966592427616931,0.0913140311804024,0.0864142538975485,0.0832962138084641,0.0806236080178165,0.0779510022271735,0.0743875278396433,0.0703786191536764,0.0663697104677050,0.0623608017817381,0.0583518930957667,0.0543429844097998,0.0512249443207109,0.0485523385300679,0.0463251670378615,0.0445434298440965,0.0440979955456552,0.0440979955456552,0.0427616926503359,0.0409799554565708,0.0391982182628057,0.0374164810690407,0.0351893095768389,0.0334075723830738,0.0320712694877500,0.0311804008908675,0.0307349665924262,0.0307349665924262,0.0316258351893088,0.0334075723830738,0.0369710467705994,0.0454342984409790,0.0623608017817381,0.0890868596881961,0.126948775055681,0.177282850779508,0.239198218262808,0.310467706013361,0.387082405345210,0.466369710467705,0.543429844097995,0.606236080178173,0.657461024498887,0.706904231625836,0.749220489977729,0.781737193763919,0.803563474387528,0.814253897550114,0.815590200445433,0.808463251670377,0.794209354120266,0.774164810690422,0.747884187082406,0.718930957683741,0.687750556792875,0.652561247216038,0.614253897550111,0.573719376391983,0.532739420935414,0.492650334075722,0.454342984409800,0.418262806236080,0.385300668151449,0.355902004454343,0.329621380846327,0.306904231625836,0.289977728285076,0.276614699331848,0.263697104677060,0.251670378619155,0.240979955456569,0.231625835189311,0.222717149220490,0.214699331848552,0.207572383073496,0.200890868596882,0.193763919821826,0.186191536748329,0.179064587973273,0.171937639198218,0.163474387527838,0.155456570155904,0.146993318485525,0.138530066815145,0.129621380846324,0.120267260579067,0.110913140311805,0.102449888641425,0.0953229398663693,0.0881959910913135,0.0832962138084641,0.0792873051224927,0.0739420935412020,0.0681514476614701,0.0623608017817381,0.0561247216035649,0.0498886414253917,0.0436525612472139,0.0378619153674820,0.0329621380846325,0.0293986636971069,0.0267260579064593,0.0231625835189291,0.0209354120267274,0.0191536748329623,0.0164810690423146,0.0133630289532303,0.0115812917594653];
Fast.ppg = [0.303054662379424,0.297829581993568,0.294212218649519,0.293408360128618,0.295819935691320,0.304260450160771,0.320739549839230,0.345659163987140,0.380225080385851,0.423633440514468,0.474678456591639,0.530546623794215,0.588826366559485,0.647106109324759,0.702572347266881,0.746382636655948,0.780948553054664,0.813102893890677,0.838826366559488,0.855707395498393,0.863344051446947,0.861334405144695,0.850080385852091,0.830385852090033,0.803456591639871,0.771302250803858,0.734726688102894,0.700160771704182,0.665594855305466,0.627009646302251,0.586816720257237,0.547427652733120,0.509244372990355,0.473874598070742,0.441720257234729,0.412781350482315,0.387861736334405,0.366961414790996,0.350080385852090,0.338424437299036,0.330787781350482,0.324758842443730,0.319935691318329,0.316720257234726,0.314710610932478,0.314308681672027,0.314308681672027,0.314308681672027,0.314710610932478,0.315112540192928,0.314308681672027,0.313102893890676,0.312299035369775,0.311495176848874,0.309083601286176,0.305466237942122,0.301446945337622,0.296221864951771,0.289790996784568,0.282958199356915,0.275321543408361,0.268086816720258,0.261655948553055,0.256832797427654,0.255225080385852,0.257636655948555,0.265675241157555,0.281350482315113,0.305868167202573,0.339228295819937,0.380627009646302,0.428456591639873,0.479903536977495,0.532556270096463,0.583601286173634,0.630627009646304,0.671221864951768,0.700964630225083,0.721864951768489,0.737540192926047,0.745176848874601,0.744774919614150,0.735932475884245,0.719051446945340,0.694533762057880,0.664389067524115,0.629823151125403,0.591639871382638,0.550241157556269,0.512459807073954,0.477090032154342,0.437700964630225,0.397106109324761,0.356913183279743,0.319131832797428,0.284967845659163,0.254019292604501,0.227090032154343,0.204180064308682,0.185289389067524,0.170418006430867,0.158360128617362,0.150723472668812,0.145900321543407,0.141479099678457,0.138665594855308,0.137057877813506,0.136254019292605,0.136655948553056,0.138263665594857,0.139871382636655,0.141077170418006,0.141479099678457,0.141881028938907,0.143086816720258,0.145096463022506,0.145498392282957,0.144694533762060,0.142684887459808,0.139871382636655,0.137459807073957,0.135450160771704,0.133842443729904,0.133440514469454,0.133842443729904,0.135048231511254,0.140273311897105,0.149919614147911,0.164790996784565,0.188102893890677,0.221061093247587,0.264469453376208,0.317122186495176,0.377009646302252,0.441318327974279,0.507234726688103,0.571945337620580,0.632636655948552,0.686897106109327,0.728295819935691,0.759244372990353,0.785369774919614,0.803054662379421,0.811093247588425,0.809083601286177,0.798231511254020,0.779340836012862,0.754421221864952,0.724678456591641,0.691318327974277,0.655546623794214,0.618971061093250,0.586414790996787,0.556672025723472,0.525321543408359,0.494372990353697,0.465434083601288,0.439308681672027,0.415996784565918,0.396302250803860,0.380225080385851,0.367363344051446,0.358118971061095,0.351688102893892,0.347668810289388,0.345257234726689,0.343247588424437,0.341237942122185,0.339630225080387,0.338022508038586,0.336414790996784,0.334807073954982,0.333199356913185,0.331591639871383,0.329983922829582,0.328376205787784,0.326768488745982,0.325562700964631,0.323553054662379,0.320337620578780,0.315112540192928,0.309083601286176,0.303054662379424,0.298633440514469,0.296623794212221,0.299839228295820,0.310691318327974,0.330787781350482,0.360530546623793,0.393488745980707,0.431270096463022,0.481913183279743,0.540594855305467,0.603697749196143,0.667202572347268,0.739549839228299,0.813102893890677,0.872990353697749,0.920819935691320,0.957395498392284,0.982315112540194,0.996784565916401,1,0.993971061093248,0.979903536977495,0.958199356913185,0.930466237942122,0.897106109324762,0.858922829581996,0.817122186495177,0.773311897106110,0.728697749196142,0.683279742765273,0.638665594855304,0.600482315112539,0.566318327974278,0.530948553054661,0.497186495176850,0.467041800643089,0.440916398713828,0.418408360128617,0.399919614147910,0.385048231511256,0.372588424437302,0.362942122186496,0.356511254019293,0.352491961414793,0.350884244372991,0.350884244372991,0.350884244372991,0.350482315112541,0.350482315112541,0.350482315112541,0.349276527331189,0.348070739549838,0.346463022508041,0.344453376205789,0.341237942122185,0.336816720257234,0.333601286173635,0.330787781350482,0.326366559485532,0.321141479099680,0.316318327974275,0.313102893890676,0.313102893890676,0.318327974276528,0.330385852090032,0.351688102893892,0.384646302250806,0.428456591639873,0.473070739549841,0.519694533762058,0.577572347266881,0.641077170418007,0.705385852090034,0.767282958199357,0.823151125401929,0.871382636655951,0.910369774919618,0.938906752411577,0.956993569131834,0.964228295819937,0.961414790996784,0.950964630225081,0.933681672025726,0.909163987138266,0.878617363344055,0.843247588424438,0.803456591639871,0.761254019292605,0.717443729903538,0.673633440514471,0.631028938906755,0.589630225080386,0.551045016077170,0.519292604501607,0.492765273311900,0.466639871382639,0.442524115755626,0.421221864951770,0.403938906752414,0.389469453376207,0.377813504823153,0.368971061093248,0.362540192926045,0.357717041800644,0.354099678456590,0.352090032154342,0.352090032154342,0.352491961414793,0.352491961414793,0.352090032154342,0.351688102893892,0.350884244372991,0.349678456591640,0.348070739549838,0.346463022508041,0.344051446945338,0.340032154340838,0.335209003215433,0.330787781350482,0.325964630225081,0.319935691318329,0.314308681672027,0.310289389067523,0.309485530546626,0.313906752411577,0.325964630225081,0.347266881028941,0.377411575562703,0.417604501607716,0.466639871382639,0.522909967845661,0.574758842443733,0.623794212218651,0.678858520900322,0.734726688102894,0.786977491961416,0.832797427652735,0.869372990353699,0.895900321543411,0.911575562700965,0.916800643086820,0.911977491961415,0.898311897106109,0.879019292604501,0.854501607717042,0.822749196141479,0.785369774919614,0.744372990353700,0.701366559485533,0.657556270096466,0.614147909967845,0.572347266881030,0.532154340836012,0.494372990353697,0.460209003215436,0.429260450160774,0.405144694533761,0.386254019292604,0.368569131832797,0.354099678456590,0.342845659163987,0.334405144694536,0.328376205787784,0.325562700964631,0.324758842443730,0.325562700964631,0.326768488745982,0.327974276527333,0.329983922829582,0.331591639871383,0.331189710610933,0.330385852090032,0.329180064308681,0.327572347266883,0.325964630225081,0.323954983922829,0.320739549839230,0.316318327974275,0.310691318327974,0.304260450160771,0.297829581993568,0.293810289389068,0.291398713826366,0.289790996784568,0.291398713826366,0.298231511254019,0.312299035369775,0.335209003215433,0.368569131832797,0.411575562700964,0.463022508038585,0.520900321543409,0.582797427652733,0.637057877813507,0.685691318327975,0.737138263665596,0.785369774919614,0.827170418006433,0.860128617363344,0.882636655948555,0.894292604501609,0.895096463022510,0.885852090032154,0.867765273311897,0.842041800643087,0.809887459807074,0.776929260450163,0.742765273311898,0.703376205787782,0.661173633440516,0.618971061093250,0.577974276527332,0.538183279742765,0.500803858520900,0.466237942122188,0.434887459807076,0.407556270096464,0.383842443729905,0.366559485530545,0.354099678456590,0.342443729903536,0.333199356913185,0.325964630225081,0.320739549839230,0.318327974276528,0.317926045016077,0.318327974276528,0.319533762057879,0.321141479099680,0.322749196141478,0.323954983922829,0.325160771704180,0.325562700964631,0.324356913183280,0.321543408360131,0.317524115755627,0.313102893890676,0.307475884244374,0.300643086816721,0.293408360128618,0.285771704180064,0.278536977491960,0.271704180064307,0.266881028938906,0.264871382636658,0.265675241157555,0.271704180064307,0.284565916398713,0.305868167202573,0.336012861736334,0.375401929260450,0.422025723472671,0.473472668810292,0.527331189710612,0.581591639871382,0.633440514469453,0.674839228295822,0.707395498392286,0.736334405144696,0.758842443729903,0.772508038585209,0.776929260450163,0.771704180064308,0.757234726688105,0.734324758842444,0.703778135048232,0.668006430868169,0.627813504823151,0.565112540192926,0.490353697749197,0.427652733118973,0.371784565916401,0.320739549839230,0.272909967845658,0.228697749196141,0.188102893890677,0.151929260450159,0.120176848874598,0.0924437299035372,0.0691318327974279,0.0498392282958199,0.0369774919614150,0.0285369774919615,0.0213022508038589,0.0152733118971062,0.0112540192926045,0.00924437299035398,0.00844051446945352,0.00803858520900354,0.00803858520900354,0.00844051446945352,0.00884244372990354,0.00884244372990354,0.0104501607717044,0.0120578778135049,0.0124598070739553,0.0116559485530549,0.00924437299035398,0.00683279742765269,0.00482315112540179,0.00281350482315131,0.00120578778135044,0.000401929260450024,0,0,0.00160771704180087,0.00602893890675264,0.0132636655948553,0.0273311897106111,0.0506430868167204,0.0856109324758845,0.132234726688103,0.190112540192925,0.256832797427654,0.329581993569131,0.405948553054662,0.482315112540193,0.555064308681674,0.613745980707395,0.661977491961417,0.708199356913182,0.746784565916398,0.775723472668812,0.793408360128618,0.799437299035371,0.793810289389069,0.778536977491961,0.754823151125403,0.723472668810290,0.686093247588426,0.649517684887462,0.612942122186498,0.571945337620580,0.530144694533764,0.488745980707396,0.449356913183279,0.411977491961414,0.378617363344054,0.349276527331189,0.323954983922829,0.303858520900320,0.287781350482316,0.274919614147911,0.266077170418005,0.259244372990352,0.253215434083600,0.247990353697749,0.243569131832798,0.239549839228298,0.236334405144695,0.233520900321546,0.231109324758843,0.229099678456591,0.226286173633442,0.222266881028938,0.219453376205789,0.217041800643087,0.213826366559487,0.209003215434082,0.203778135048231,0.198151125401929,0.191720257234727,0.185289389067524,0.179662379421222,0.176848874598069,0.178054662379420,0.184887459807073,0.201366559485533,0.223070739549839,0.252411575562703,0.295418006430870,0.350080385852090,0.415192926045018,0.487540192926044,0.563102893890674,0.638263665594858,0.710610932475885,0.776527331189713,0.834003215434087,0.881028938906753,0.912379421221865,0.932073954983924,0.945337620578780,0.948954983922829,0.942926045016077,0.926848874598072,0.901527331189712,0.868167202572348,0.828376205787781,0.783360128617366,0.735530546623795,0.685691318327975,0.635048231511255,0.590836012861737,0.550643086816720,0.508440514469454,0.467041800643089,0.428054662379423,0.392282958199356,0.360128617363343,0.331993569131834,0.307877813504825,0.287781350482316,0.271704180064307,0.259244372990352,0.250803858520902,0.245176848874600,0.240755627009645,0.238344051446947,0.237138263665595,0.236334405144695,0.235932475884244,0.235128617363343,0.233922829581992,0.232315112540195,0.230707395498393,0.228697749196141,0.227090032154343,0.225884244372992,0.223874598070740,0.219855305466240,0.215032154340835,0.209807073954983,0.204180064308682,0.198954983922830,0.195739549839227,0.196945337620578,0.205385852090033,0.223070739549839,0.251205787781352,0.283360128617365,0.322749196141478,0.376205787781351,0.439710610932477,0.510048231511256,0.583601286173634,0.655546623794214,0.723472668810290,0.783762057877817,0.834003215434087,0.873392282958199,0.901527331189712];
Noise.ppg = [0.0766992859032002,0.0830468130124306,0.0920391430838402,0.103147315524993,0.116900290928326,0.134091510182491,0.155778894472362,0.183284845279027,0.217138323194923,0.257074847923829,0.296482412060303,0.336418936789209,0.382967468923566,0.431631843427664,0.479502777043111,0.524464427400159,0.564136471832847,0.598254430044961,0.627082782332715,0.650621528696110,0.669664110023803,0.683946046019570,0.692673895794762,0.695054218460724,0.692409415498543,0.685532927796878,0.674160275059508,0.658820417878866,0.641100238032267,0.623380058185664,0.608569161597462,0.599047870933615,0.594551705897910,0.595080666490346,0.599047870933615,0.602750595080666,0.604601957154193,0.604337476857975,0.599841311822269,0.591377942343296,0.578682888124835,0.562549590055541,0.544035969320285,0.523935466807723,0.502512562814070,0.480296217931763,0.456757471568368,0.433218725204973,0.413382702988626,0.395398042845808,0.377148902406770,0.362602486114785,0.354139116635811,0.354139116635811,0.364718328484527,0.387463633959270,0.421317111875166,0.462576038085163,0.505157365776248,0.541126686061888,0.563607511240411,0.570748479238297,0.560698227982015,0.532927796879133,0.492462311557787,0.446442740015870,0.402274530547474,0.365511769373181,0.339328220047605,0.325310764348057,0.321343559904788,0.325046284051839,0.334303094419464,0.344617825971965,0.355461518116899,0.368950013224014,0.384289870404653,0.401216609362601,0.419201269505421,0.437450409944460,0.455964030679713,0.473155249933879,0.488759587410736,0.503570483998942,0.517852419994709,0.529225072732082,0.539539804284580,0.552499338799259,0.566252314202592,0.578947368421053,0.587675218196245,0.589526580269769,0.582385612271886,0.565723353610156,0.542449087542976,0.517587939698491,0.498545358370801,0.492197831261572,0.496693996297274,0.512827294366570,0.544564929912721,0.587410737900027,0.635810632107907,0.684739486908224,0.731288019042580,0.774133827029886,0.814334832055011,0.854271356783920,0.895265802697699,0.880454906109493,0.828616768050780,0.812747950277705,0.820682359164242,0.840253901084369,0.865379529225072,0.892092039143082,0.918540068764876,0.942872256016925,0.964030679714360,0.980692938376089,0.992859032002114,0.999471039407564,1,0.994445913779423,0.983866701930704,0.969849246231155,0.952658026976989,0.932028563871991,0.908489817508593,0.883364189367892,0.857974080930971,0.833112933086485,0.809838667019305,0.788680243321871,0.770960063475271,0.756413647183284,0.745040994445914,0.737635546151812,0.733668341708543,0.733139381116107,0.735519703782067,0.740280349113990,0.745834435334568,0.750595080666488,0.753504363924887,0.753239883628669,0.749272679185400,0.741602750595081,0.729965617561490,0.714096799788414,0.694260777572070,0.671250991801109,0.646125363660408,0.619677334038614,0.592435863528165,0.564665432425283,0.535837080137529,0.504628405183815,0.469452525786828,0.429251520761704,0.390637397513885,0.350436392488760,0.301243057392223,0.247553557259983,0.194128537423962,0.144935202327426,0.103676276117429,0.0724676011637132,0.0510446971700609,0.0388786035440360,0.0333245173234594,0.0314731552499340,0.0322665961385878,0.0333245173234594,0.0314731552499340,0.0269769902142292,0.0203649828087807,0.0124305739222430,0.00528960592435882,0.000793440888653763,0,0.00396720444326912,0.0126950542184608,0.0253901084369214,0.0407299656175614,0.0563343030944195,0.0719386405712776,0.0880719386405713,0.103411795821211,0.117693731816980,0.130653266331658,0.142819359957683,0.153927532398836,0.162919862470246,0.169796350171912,0.174556995503835,0.177730759058450,0.180375562020629,0.182491404390373,0.183549325575244,0.184607246760116,0.185929648241206,0.188309970907167,0.191483734461782,0.194921978312616,0.197831261571013,0.200211584236974,0.202327426606718,0.204972229568898,0.208145993123513,0.212113197566782,0.217138323194923,0.223485850304152,0.231949219783126,0.242528431631842,0.256281407035175,0.273472626289341,0.294631049986776,0.319756678127479,0.348585030415234,0.381116106850039,0.416820946839461,0.449352023274266,0.479767257339326,0.512827294366570,0.545887331393812,0.576567045755090,0.603808516265538,0.626818302036497,0.645067442475535,0.658026976990214,0.665696905580534,0.667548267654058,0.663581063210789,0.654059772546946,0.641100238032267,0.625231420259191,0.605659878339062,0.583443533456758,0.559640306797142,0.535308119545093,0.511240412589262,0.488230626818300,0.466014281935996,0.444591377942343,0.423961914837344,0.404125892621000,0.387463633959270,0.372123776778629,0.354932557524463,0.337212377677863,0.318963237238825,0.300185136207353,0.281671515472097,0.263422375033059,0.245437714890241,0.227982015339857,0.211055276381909,0.195715419201269,0.182226924094155,0.172705633430309,0.165829145728643,0.158952658026977,0.153134091510183,0.149166887066913,0.147051044697170,0.147315524993388,0.149960327955567,0.155249933879926,0.162919862470246,0.172441153134091,0.183284845279027,0.194393017720180,0.205501190161332,0.217402803491141,0.229568897117166,0.241206030150754,0.251520761703252,0.259984131182226,0.266860618883894,0.273208145993123,0.279291192806137,0.284845279026711,0.289870404654853,0.294895530282994,0.299391695318699,0.303887860354404,0.308119545093891,0.311822269240942,0.314467072203120,0.315260513091774,0.314467072203120,0.312615710129596,0.309441946574979,0.305474742131710,0.301243057392223,0.297011372652736,0.294102089394340,0.291457286432161,0.288283522877544,0.284845279026711,0.280878074583443,0.275852948955301,0.269769902142290,0.263686855329277,0.258397249404920,0.253636604072997,0.249669399629728,0.247024596667547,0.245437714890241,0.245437714890241,0.246495636075113,0.247289076963765,0.248346998148637,0.249404919333510,0.251256281407034,0.253372123776779,0.256281407035175,0.259719650886008,0.264215815921713,0.270298862734727,0.277968791325046,0.286432160804020,0.296217931764084,0.308912985982545,0.324252843163184,0.342237503306005,0.363131446707219,0.386670193070616,0.411795821211320,0.437185929648242,0.462047077492727,0.485850304152340,0.507802168738429,0.527109230362337,0.541391166358107,0.551970378206823,0.561491668870669,0.568632636868552,0.572864321608039,0.573393282200475,0.571012959534515,0.565723353610156,0.558582385612272,0.550912457021950,0.542978048135412,0.534779158952657,0.527902671250991,0.522613065326632,0.518645860883363,0.515736577624967,0.513091774662786,0.509918011108171,0.504892885480030,0.498016397778365,0.489024067706954,0.477386934673366,0.463898439566251,0.449087542978048,0.435863528167151,0.423697434541126,0.410473419730229,0.397513885215550,0.385083311293308,0.373975138852155,0.374768579740810,0.382702988627347,0.385083311293308,0.385347791589526,0.384818830997089,0.384554350700871,0.385083311293308,0.385876752181962,0.387463633959270,0.389314996032795,0.391166358106321,0.392753239883627,0.393811161068500,0.394075641364718,0.393282200476063,0.391959798994976,0.389579476329013,0.385876752181962,0.381380587146257,0.377148902406770,0.372917217667283,0.367892092039142,0.362866966411003,0.358899761967734,0.355725998413117,0.353345675747157,0.352023274266066,0.351494313673630,0.351758793969848,0.353081195450939,0.355197037820681,0.358370801375298,0.361809045226131,0.365511769373181,0.369743454112668,0.373975138852155,0.377677862999206,0.380322665961384,0.381380587146257,0.380322665961384,0.377148902406770,0.372388257074847,0.366569690558054,0.360222163448822,0.354932557524463,0.350436392488760,0.346469188045492,0.343295424490874,0.340915101824914,0.339328220047605,0.338534779158951,0.338534779158951,0.339592700343824,0.341179582121132,0.343295424490874,0.345940227453055,0.348849510711452,0.352023274266066,0.354932557524463,0.357841840782862,0.360751124041258,0.363924887595873,0.367627611742924,0.371859296482411,0.377413382702988,0.384818830997089,0.393811161068500,0.404125892621000,0.416027505950807,0.426871198095741,0.436921449352023,0.448294102089394,0.460195715419200,0.471568368156571,0.481618619412853,0.490081988891827,0.496958476593492,0.501983602221633,0.505157365776248,0.507008727849775,0.507802168738429,0.507802168738429,0.507008727849775,0.505686326368684,0.503834964295160,0.501719121925416,0.499074318963237,0.496165035704841,0.492726791854005,0.489024067706954,0.485056863263686,0.480825178524199,0.476064533192276,0.471039407564137,0.466014281935996,0.460989156307855,0.455170589791059,0.449352023274266,0.443533456757471,0.437979370536896,0.432425284316318,0.426606717799523,0.420523670986512,0.414440624173498,0.408093097064269,0.401745569955037,0.395662523142026,0.390901877810103,0.386934673366834,0.383231949219784,0.380058185665166,0.377942343295424,0.376619941814334,0.375826500925679,0.375826500925679,0.376355461518116,0.376884422110552,0.377677862999206,0.378735784184079,0.379793705368951,0.380587146257603,0.380851626553821,0.380851626553821,0.380587146257603,0.380058185665166,0.379529225072733,0.379000264480297,0.378471303887860,0.377677862999206,0.376884422110552,0.376090981221898,0.375033060037028,0.373975138852155,0.373181697963501,0.372123776778629,0.370801375297541,0.369214493520232,0.367892092039142,0.366305210261836,0.364982808780745,0.363924887595873,0.363131446707219,0.362866966411003,0.362866966411003,0.363131446707219,0.363660407299655,0.364189367892091,0.364718328484527,0.365247289076963,0.366040729965618,0.367098651150490,0.368421052631578,0.370007934408887,0.372123776778629,0.374239619148373,0.376619941814334,0.379264744776515,0.381909547738693,0.384818830997089,0.388257074847922,0.392224279291194,0.396720444326896,0.401745569955037,0.406506215286960,0.411531340915102,0.416291986247025,0.421052631578948,0.426077757207087,0.431631843427664,0.436921449352023,0.442740015868816,0.450145464162920,0.458873313938113,0.468394604601956,0.477915895265802,0.487172705633431,0.495900555408623,0.503570483998942,0.510182491404389,0.515736577624967,0.520761703253108,0.524993387992595,0.527902671250991,0.529754033324515,0.532134355990478,0.534250198360221,0.535837080137529,0.536895001322401,0.536895001322401,0.535837080137529,0.533456757471569,0.529754033324515,0.524199947103941,0.516530018513621,0.508331129330865,0.499338799259455,0.487966146522085,0.475271092303624,0.462840518381381,0.451467865644008,0.441682094683947,0.433747685797409,0.427135678391959,0.421052631578948,0.414705104469716,0.407828616768051,0.400423168473949,0.393546680772281,0.386934673366834,0.379793705368951,0.372917217667283,0.367098651150490,0.362866966411003,0.360222163448822,0.358635281671516,0.358106321079080,0.358370801375298,0.359428722560168,0.360751124041258,0.362602486114785,0.364718328484527,0.367098651150490,0.369478973816450,0.371859296482411,0.373710658555937,0.375297540333246,0.376355461518116,0.377677862999206,0.379264744776515,0.381116106850039,0.383231949219784,0.385612271885744,0.387992594551707,0.389843956625231,0.391430838402539,0.392488759587409,0.392753239883627,0.392224279291194,0.390901877810103,0.389050515736577,0.386934673366834,0.384289870404653,0.381380587146257,0.378735784184079,0.376355461518116,0.373975138852155,0.371065855593759,0.367892092039142,0.364453848188309,0.361280084633695,0.358370801375298,0.355990478709335,0.353874636339593,0.351758793969848,0.350171912192542,0.349113991007670,0.320021158423697,0.277704311028828,0.257868288812484,0.249933879925946];

Regular.Labels.Peak = [83	189	293	397	499	602];
Regular.Labels.Valley = [62	167	272	376	477	581];
Irregular.Labels.Peak = [9	92	184	241 299	399	481	566];
Irregular.Labels.Valley = [72	166	226 281	380	463	544];
Fast.Labels.Peak = [21	81	144	203	263	324	385	445	508	567];
Fast.Labels.Valley = [4	65	124	185	245	307	367	428	490	549	609];
Noise.Labels.Peak = [24	123	233	341	446	553];
Noise.Labels.Valley = [98 202	310	416	508];
if step == 1   %generate figure 1： show template
    
    [~,a] = findpeaks(-Irregular.ppg);    
    figure;
    subplot(4,1,1)
    t = (1:625)/125;
    plot(t,Regular.ppg,'k');
    hold on;
    plot(t(Regular.Labels.Peak),Regular.ppg(Regular.Labels.Peak),'k*');
    plot(t(Regular.Labels.Valley),Regular.ppg(Regular.Labels.Valley),'k+');
    ylabel('(a) Regular');
    axis off;
    subplot(4,1,2)
    plot(t,Irregular.ppg,'k');
    hold on;
    plot(t(Irregular.Labels.Peak),Irregular.ppg(Irregular.Labels.Peak),'k*');
    plot(t(Irregular.Labels.Valley),Irregular.ppg(Irregular.Labels.Valley),'k+');
    ylabel('(b) Irregular');
    axis off;
    subplot(4,1,3)
    plot(t,Fast.ppg,'k');
    hold on;
    plot(t(Fast.Labels.Peak),Fast.ppg(Fast.Labels.Peak),'k*');
    plot(t(Fast.Labels.Valley),Fast.ppg(Fast.Labels.Valley),'k+');
    ylabel('(c) Fast Rhythm');
    axis off;
    subplot(4,1,4)
    t = (1:625)/125;
    plot(t,Noise.ppg,'k');
    hold on;
    plot(t(Noise.Labels.Peak),Noise.ppg(Noise.Labels.Peak),'k*');
    plot(t(Noise.Labels.Valley),Noise.ppg(Noise.Labels.Valley),'k+');
    ylabel('(d) Noisy');
    ylim([-0.1 1.1]);
    axis off;
elseif step == 2 %% figure 2 show alignment
    showAlign(Regular, Irregular);
elseif step == 3
    figure;
    connectBasedOnValley2(Regular,Regular,2,1);
    title('(b)')
    connectBasedOnPeak2(Regular,Regular,2,1);
    title('(a)')
    connectBasedOnValley2(Regular,Irregular,2,2);
    title('(d)')
    connectBasedOnPeak2(Regular,Irregular,2,2);
    title('(c)')
    connectBasedOnValley2(Fast,Noise,2,3);
    title('(f)')
    connectBasedOnPeak2(Fast,Noise,2,3);
    title('(e)')
elseif step == 4  %% generate table
    array = {'synthetic_ppg_125Hz_1m_100_0_0_0.csv';
        'synthetic_ppg_125Hz_1m_90_10_0_0.csv';
        'synthetic_ppg_125Hz_1m_80_10_10_0.csv';
        'synthetic_ppg_125Hz_1m_70_10_10_10.csv';
        'synthetic_ppg_125Hz_1m_50_20_20_10.csv';
        'synthetic_ppg_125Hz_5m_50_20_20_10.csv';
        'synthetic_ppg_200Hz_5m_50_20_20_10.csv';
        'synthetic_ppg_400Hz_10m_50_20_20_10.csv';
        'synthetic_ppg_125Hz_10m_70_10_10_10.csv';
        'synthetic_ppg_400Hz_10m_70_10_10_10.csv';
        };
    rootFolder = '.\Records';
    Fs_a = [125,125,125,125,125,125,200,400,125,400];
    method = 2;
    for i = 1:length(array)
        t = readtable(fullfile(rootFolder,array{i}));
        ppg = rmmissing(t.PPG);
        peaks = rmmissing(t.PeaksLoc);
        onsets = rmmissing(t.OnsetLoc);
        Fs = Fs_a(i);
        [peaks_1,onsets_1] = ppg_peak_onset_detection_Hilbert(ppg,Fs,0);
        window = 0.01;
        
        if method == 2
            offset = 0.01*Fs;
            peaks_1 = correctAnnotations(ppg,peaks_1,window,Fs,'peak');
            onsets_1 = correctAnnotations(ppg,onsets_1,window,Fs,'onset');
        end
        [SE1_onsets,PP1_onsets,FDR1_onsets,TP_o_1,FP_o_1,FN_o_1] = get_accuracy(onsets,onsets_1,offset);
        [SE1_peaks,PP1_peaks,FDR1_peaks,TP_p_1,FP_p_1,FN_p_1] = get_accuracy(peaks,peaks_1,offset);
        [peaks_2,onsets_2] = ppg_peak_onset_detection_automatedBeat(ppg,Fs,0);
        if method == 2
            peaks_2 = correctAnnotations(ppg,peaks_2,window,Fs,'peak');
            onsets_2 = correctAnnotations(ppg,onsets_2,window,Fs,'onset');
        end
        [SE2_onsets,PP2_onsets,FDR2_onsets,TP_o_2,FP_o_2,FN_o_2] = get_accuracy(onsets,onsets_2,offset);
        [SE2_peaks,PP2_peaks,FDR2_peaks,TP_p_2,FP_p_2,FN_p_2] = get_accuracy(peaks,peaks_2,offset);
        W1 = floor(0.111 * Fs); % samples between 111 ms
        W2 = floor(0.667 * Fs); % samples between 667 ms
        W3 = W1;
        beta = 1;
        peaks_3 = peaksDetect_BlockMethods(ppg,Fs,0);
        onsets_3 = localMin(ppg,peaks_3);
        if method == 2
            peaks_3 = correctAnnotations(ppg,peaks_3,window,Fs,'peak');
            onsets_3 = correctAnnotations(ppg,onsets_3,window,Fs,'onset');
        end
        [SE3_onsets,PP3_onsets,FDR3_onsets,TP_o_3,FP_o_3,FN_o_3] = get_accuracy(onsets,onsets_3,offset);
        [SE3_peaks,PP3_peaks,FDR3_peaks,TP_p_3,FP_p_3,FN_p_3] = get_accuracy(peaks,peaks_3,offset);
        figure;
        ax(1) = subplot(4,1,1);
        x = (1:length(ppg))/Fs;
        plot(x,ppg,'k');
        hold on;
        plot(x(peaks),ppg(peaks),'r*');
        plot(x(onsets),ppg(onsets),'g+');
        title('Original');
        ax(2) = subplot(4,1,2);
        plot_results(ppg,Fs, ...
            peaks_1(TP_p_1), ...
            peaks_1(FP_p_1),peaks(FN_p_1),onsets_1(TP_o_1),onsets_1(FP_o_1),onsets(FN_o_1));
        title(['Method 1: SE_{o}=' num2str(SE1_onsets,3) ', SE_{p}=' num2str(SE1_peaks,3)]);
        ax(3) = subplot(4,1,3);
        plot_results(ppg,Fs,...
            peaks_2(TP_p_2), ...
            peaks_2(FP_p_2),peaks(FN_p_2),onsets_2(TP_o_2),onsets_2(FP_o_2),onsets(FN_o_2));
        title(['Method 2: SE_{o}=' num2str(SE2_onsets,3) ', SE_{p}=' num2str(SE2_peaks,3)]);
        ax(4) = subplot(4,1,4);
        plot_results(ppg,Fs,...
            peaks_3(TP_p_3), ...
            peaks_3(FP_p_3),peaks(FN_p_3),onsets_3(TP_o_3),onsets_3(FP_o_3),onsets(FN_o_3));
        title(['Method 3: SE_{o}=' num2str(SE3_onsets,3) ', SE_{p}=' num2str(SE3_peaks,3)]);
        linkaxes(ax,'x');
        t_all(i,:) = round([SE1_onsets,PP1_onsets,SE1_peaks,PP1_peaks,SE2_onsets,PP2_onsets,SE2_peaks,PP2_peaks,SE3_peaks,PP3_peaks]*100,1);
    end
elseif step == 5  %% figure 6
    rootFolder = '.\Records';
    t = readtable(fullfile(rootFolder,'synthetic_ppg_125Hz_1m_100_0_0_0.csv'));
    ppg = rmmissing(t.PPG);
    peaks = rmmissing(t.PeaksLoc);
    onsets = rmmissing(t.OnsetLoc);
    Fs = 125;
    [peaks_1,onsets_1] = ppg_peak_onset_detection_Hilbert(ppg,Fs,0);
    window = 0.01;
    
    offset = 0.01*Fs;
    peaks_1 = correctAnnotations(ppg,peaks_1,window,Fs,'peak');
    onsets_1 = correctAnnotations(ppg,onsets_1,window,Fs,'onset');
    [SE1_onsets,PP1_onsets,FDR1_onsets,TP_o_1,FP_o_1,FN_o_1] = get_accuracy(onsets,onsets_1,offset);
    [SE1_peaks,PP1_peaks,FDR1_peaks,TP_p_1,FP_p_1,FN_p_1] = get_accuracy(peaks,peaks_1,offset);
    [peaks_2,onsets_2] = ppg_peak_onset_detection_automatedBeat(ppg,Fs,0);
    
    peaks_2 = correctAnnotations(ppg,peaks_2,window,Fs,'peak');
    onsets_2 = correctAnnotations(ppg,onsets_2,window,Fs,'onset');
    
    [SE2_onsets,PP2_onsets,FDR2_onsets,TP_o_2,FP_o_2,FN_o_2] = get_accuracy(onsets,onsets_2,offset);
    [SE2_peaks,PP2_peaks,FDR2_peaks,TP_p_2,FP_p_2,FN_p_2] = get_accuracy(peaks,peaks_2,offset);
    W1 = floor(0.111 * Fs); % samples between 111 ms
    W2 = floor(0.667 * Fs); % samples between 667 ms
    W3 = W1;
    beta = 1;
    peaks_3 = peaksDetect_BlockMethods(ppg,Fs,0);
    onsets_3 = localMin(ppg,peaks_3);
    window = 0.04;
    peaks_3 = correctAnnotations(ppg,peaks_3,window,Fs,'peak');
    onsets_3 = correctAnnotations(ppg,onsets_3,window,Fs,'onset');
    
    [SE3_onsets,PP3_onsets,FDR3_onsets,TP_o_3,FP_o_3,FN_o_3] = get_accuracy(onsets,onsets_3,offset);
    [SE3_peaks,PP3_peaks,FDR3_peaks,TP_p_3,FP_p_3,FN_p_3] = get_accuracy(peaks,peaks_3,offset);
    figure;
    subplot(6,5,[1,2,3,4,6,7,8,9,11,12,13,14]);
    show_true_feature(ppg,Fs,peaks,onsets);
    range = [50.8,54.8];
    Yloc = 1.3;
    color = 'b';
    show_category(ppg,Fs,peaks,peaks_1,offset,Yloc,color,'*',range);
    Yloc = -0.1;
    show_category(ppg,Fs,onsets,onsets_1,offset,Yloc,color,'+',range);
    
    Yloc = 1.2;
    color = 'm';
    show_category(ppg,Fs,peaks,peaks_2,offset,Yloc,color,'*',range);
    Yloc = -0.2;
    show_category(ppg,Fs,onsets,onsets_2,offset,Yloc,color,'+',range);
    
    Yloc = 1.1;
    color = '#77AC30';
    show_category(ppg,Fs,peaks,peaks_3,offset,Yloc,color,'*',range);

    xlim([50.8,54.8]);
    ylim([-0.4 1.4]);

    x = (1:length(ppg))/Fs;
    t1 = find(x>54.4&x<54.5);
    y = ppg(t1);
    rectangle('Position',[x(min(t1)) -0.05 x(max(t1))-x(min(t1)) 0.2], 'EdgeColor', 'k','LineStyle','--');
    title('(a) Record 1 (Regular: 100%, Irregular: 0%, Fast Rhythm: 0%, Noisy: 0%)','fontSize',7);
    
    text(range(2)+0.2,1.4,'Systolic Peak','Color','k','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.3,'Method I','Color','b','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.2,'Method II','Color','m','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.1,'Method III','Color','#77AC30','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,0,'Onset','Color','k','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,-0.1,'Method I','Color','b','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,-0.2,'Method II','Color','m','FontSize',8,'HorizontalAlignment','left');

    axis off;
    subplot(6,5,10);
    range = [54.42,54.5];
    show_true_feature(ppg,Fs,peaks,onsets);
    color = 'b';
    Yloc = -0.075;
    show_category(ppg,Fs,onsets,onsets_1,offset,Yloc,color,'+',range);
    
    color = 'm';
    Yloc = -0.15;
    t1 = find(x>54.42&x<54.5);
    show_category(ppg,Fs,onsets,onsets_2,offset,Yloc,color,'+',range);
    rectangle('Position',[x(min(t1)) -0.2 x(max(t1))-x(min(t1)) 0.3], 'EdgeColor', 'k','LineStyle','--');
    xlim([x(min(t1)),x(max(t1))]);
    ylim([-0.2 0.1]);
    axis off;
    
    
    t = readtable(fullfile(rootFolder,'synthetic_ppg_125Hz_5m_50_20_20_10.csv'));
    ppg = rmmissing(t.PPG);
    peaks = rmmissing(t.PeaksLoc);
    onsets = rmmissing(t.OnsetLoc);
    Fs = 125;
    [peaks_1,onsets_1] = ppg_peak_onset_detection_Hilbert(ppg,Fs,0);
    window = 0.01;
    
    offset = 0.01*Fs;
    peaks_1 = correctAnnotations(ppg,peaks_1,window,Fs,'peak');
    onsets_1 = correctAnnotations(ppg,onsets_1,window,Fs,'onset');
    [SE1_onsets,PP1_onsets,FDR1_onsets,TP_o_1,FP_o_1,FN_o_1] = get_accuracy(onsets,onsets_1,offset);
    [SE1_peaks,PP1_peaks,FDR1_peaks,TP_p_1,FP_p_1,FN_p_1] = get_accuracy(peaks,peaks_1,offset);
    [peaks_2,onsets_2] = ppg_peak_onset_detection_automatedBeat(ppg,Fs,0);
    
    peaks_2 = correctAnnotations(ppg,peaks_2,window,Fs,'peak');
    onsets_2 = correctAnnotations(ppg,onsets_2,window,Fs,'onset');
    
    [SE2_onsets,PP2_onsets,FDR2_onsets,TP_o_2,FP_o_2,FN_o_2] = get_accuracy(onsets,onsets_2,offset);
    [SE2_peaks,PP2_peaks,FDR2_peaks,TP_p_2,FP_p_2,FN_p_2] = get_accuracy(peaks,peaks_2,offset);
    W1 = floor(0.111 * Fs); % samples between 111 ms
    W2 = floor(0.667 * Fs); % samples between 667 ms
    W3 = W1;
    beta = 1;
    peaks_3 = peaksDetect_BlockMethods(ppg,Fs,0);
    onsets_3 = localMin(ppg,peaks_3);
    window = 0.04;
    peaks_3 = correctAnnotations(ppg,peaks_3,window,Fs,'peak');
    onsets_3 = correctAnnotations(ppg,onsets_3,window,Fs,'onset');
    
    [SE3_onsets,PP3_onsets,FDR3_onsets,TP_o_3,FP_o_3,FN_o_3] = get_accuracy(onsets,onsets_3,offset);
    [SE3_peaks,PP3_peaks,FDR3_peaks,TP_p_3,FP_p_3,FN_p_3] = get_accuracy(peaks,peaks_3,offset);
    
    subplot(6,5,[16,17,18,19,21,22,23,24,26,27,28,29]);
    
    show_true_feature(ppg,Fs,peaks,onsets);
    range = [52,56];
    Yloc = 1.3;
    color = 'b';
    show_category(ppg,Fs,peaks,peaks_1,offset,Yloc,color,'*',range);
    Yloc = -0.1;
    show_category(ppg,Fs,onsets,onsets_1,offset,Yloc,color,'+',range);
    
    Yloc = 1.2;
    color = 'm';
    show_category(ppg,Fs,peaks,peaks_2,offset,Yloc,color,'*',range);
    Yloc = -0.2;
    show_category(ppg,Fs,onsets,onsets_2,offset,Yloc,color,'+',range);
    
    Yloc = 1.1;
    color = '#77AC30';
    show_category(ppg,Fs,peaks,peaks_3,offset,Yloc,color,'*',range);

    xlim([52,56]);
    ylim([-0.4 1.4]);

    x = (1:length(ppg))/Fs;
    t1 = find(x>55.6&x<55.8);
    y = ppg(t1);
    rectangle('Position',[x(min(t1)) 0.8 x(max(t1))-x(min(t1)) 1.05-0.8], 'EdgeColor', 'k','LineStyle','--');
    title('(b) Record 6 (Regular: 50%, Irregular: 20%, Fast Rhythm: 20%, Noisy: 0%)','fontSize',7);
    axis off;
    text(range(2)+0.2,1.4,'Systolic Peak','Color','k','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.3,'Method I','Color','b','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.2,'Method II','Color','m','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,1.1,'Method III','Color','#77AC30','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,0,'Onset','Color','k','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,-0.1,'Method I','Color','b','FontSize',8,'HorizontalAlignment','left');
    text(range(2)+0.2,-0.2,'Method II','Color','m','FontSize',8,'HorizontalAlignment','left');
    subplot(6,5,25);
    show_true_feature(ppg,Fs,peaks,onsets);
    Yloc = 1.3;
    color = 'b';
    show_category(ppg,Fs,peaks,peaks_1,offset,Yloc,color,'*',range);
    
    Yloc = 1.2;
    color = 'm';
    show_category(ppg,Fs,peaks,peaks_2,offset,Yloc,color,'*',range);
    
    Yloc = 1.1;
    color = '#77AC30';
    show_category(ppg,Fs,peaks,peaks_3,offset,Yloc,color,'*',range);
    t1 = find(x>55.6&x<55.8);
    y = ppg(t1);
    rectangle('Position',[x(min(t1)) 0.8 x(max(t1))-x(min(t1)) 1.4-0.8], 'EdgeColor', 'k','LineStyle','--');
    xlim([x(min(t1)),x(max(t1))]);
    ylim([0.8 1.4]);
    axis off;
end


function show_true_feature(s,Fs,peak,onset)
    t = (1:length(s))/Fs;
    plot(t,s,'k');
    hold on;
    plot(t(peak),s(peak),'k*');
    plot(t(onset),s(onset),'k+');
end

function [SE,PP] = show_category(s,Fs,trueFeature,predictFeature,offset,Yloc,color,symbol,range)
    [SE,PP,~,~,FP_index,FN_index] = get_accuracy(trueFeature,predictFeature,offset);
    t = 1:length(trueFeature);
    x = (1:length(s))/Fs;
    TP_inTrue = t(~ismember(t,FN_index));
    plot(x(trueFeature(TP_inTrue)),ones(1,length(TP_inTrue))*Yloc,'LineStyle','none','Marker',symbol,'Color',color);
    
    FP_x = x(predictFeature(FP_index));
    FP_y = s(predictFeature(FP_index));
    index = find(FP_x<range(2) & FP_x > range(1));
    FP_x_show = FP_x(index);
    FP_y_show = FP_y(index);

    show_text(FP_x_show,Yloc,FP_y_show,'FP',color);
    
    FN_x = x(trueFeature(FN_index));
    FN_y = s(trueFeature(FN_index));
    index = find(FN_x<range(2) & FN_x > range(1));
    FN_x_show = FN_x(index);
    FN_y_show = FN_y(index);
    show_text(FN_x_show,Yloc,FN_y_show,'FN',color); 
end

function show_text(x,y,y1,str,color,fontSize)
    if nargin < 6
        fontSize = 8;
    end
    for i = 1:length(x)
        if strcmp(str,'FP')
            plot([x(i),x(i)],[y1(i) y],'k:');
            plot(x(i),y1(i),'o','Color',color);
        end
        text(x(i),y,str,'Color',color,'FontSize',fontSize,'HorizontalAlignment','center');
    end
end

function plot_results(ppg,Fs,peaks_TP,peaks_FP,peaks_FN,onsets_TP,onsets_FP,onsets_FN)
    t = (1:length(ppg))/Fs;
    plot(t,ppg,'k');
    hold on;
    plot(t(peaks_TP),ppg(peaks_TP),'g*');
    plot(t(peaks_FP),ppg(peaks_FP),'mo');
    plot(t(peaks_FN),ppg(peaks_FN),'cv');
    plot(t(onsets_TP),ppg(onsets_TP),'g+');
    plot(t(onsets_FP),ppg(onsets_FP),'rx');
    plot(t(onsets_FN),ppg(onsets_FN),'r^');
    
end

function [SE,PP,FDR,TP_index,FP_index,FN_index] = get_accuracy(trueLoc,predictedLoc,offset)
    TP_index = [];  % true positive: systolic peak detected as systolic peak
    FP_index = [];  % false positive: non-systolic peak detected as systolic peak
    FN_index = [];  % false negtive: systolic peak has not been detected
    for i = 1:length(predictedLoc)
        t = sort(abs(predictedLoc(i) - trueLoc),'ascend');
        if t(1) <= offset
            TP_index = [TP_index;i];
        else
            FP_index = [FP_index;i];
        end
    end
    trueLoc_1 = trueLoc;
    for i = 1:length(trueLoc_1)
        [t,~] = sort(abs(trueLoc_1(i) - predictedLoc),'ascend');
        if t(1) > offset
            FN_index = [FN_index;i];            
        end
    end
    SE = numel(TP_index)/(numel(TP_index) + numel(FN_index)); %Sensitivity
    PP = numel(TP_index)/(numel(TP_index) + numel(FP_index)); %Positive predictivity
    FDR = numel(FP_index)/(numel(TP_index) + numel(FP_index));%False discovery rate(FDR)
    
    
end

function onset = localMin(ppg,peaks)
    for i = 1:length(peaks)-1
        [~,index] = min(ppg(peaks(i):peaks(i+1)));
        onset(i) = index + peaks(i)-1;
    end
end




function output = correctAnnotations(s,ann,window,Fs,type)
    % s: signal
    % ann:annotations
    % window:  unit: s
    % type:   peak, onset
    w = window*Fs;   %
    output = zeros(1,length(ann));
    for i = 1:length(ann)
        startLocs = max([1, ann(i) - ceil(w/2)]);
        endLocs = min([length(s) ann(i) + ceil(w/2)]);
        if strcmp(type,'peak')
            [~,index] = max(s(startLocs:endLocs));
        elseif strcmp(type,'onset')
            [~,index] = min(s(startLocs:endLocs));
        end
        output(i) = startLocs + index - 1;
    end
end


function showAlign(Segment, Segment2)
    
    s1_lastPeakIndex = Segment.Labels.Peak(end);
    s1_OnsetReserved = Segment.Labels.Valley(Segment.Labels.Valley<s1_lastPeakIndex);
    s1_lastOnsetIndex = s1_OnsetReserved(end);
    s2_firstPeakIndex = Segment2.Labels.Peak(1);
    s2_EndpointReserved = Segment2.Labels.Valley(Segment2.Labels.Valley>s2_firstPeakIndex);
    s2_firstEndPointIndex = s2_EndpointReserved(1);
    %% normalize
    s1 = Segment.ppg;
    s2 = Segment2.ppg;
    s1_reserved = s1(1:s1_lastPeakIndex);
    s2_reserved = s2(s2_firstPeakIndex+1:end);
    t = (1:(length(s1_reserved)+length(s2_reserved)))/125;
    figure;
    ax(1) = subplot(1,2,1);
    plot(t(1:length(s1)),s1,'b');
    hold on;
    plot(t(length(s1_reserved)-s2_firstPeakIndex:length(s1_reserved)-s2_firstPeakIndex+length(s2)-1),s2,'k');
    
    plot(t([Segment.Labels.Peak(end),Segment.Labels.Peak(end)]),[0,1],'r--');
    legend('First PPG','Second PPG');
    title('(a)');
    xlim(t([400,800]));
    xlabel('Time (s)');
    ylabel('Amplitude');
    ylim([-0.2,1.2]);
    
    
    s1_lastValleyIndex = Segment.Labels.Valley(end);
    s2_firstValleyIndex = Segment2.Labels.Valley(1);
    %% normalize
    s1 = Segment.ppg;
    s2 = Segment2.ppg;
    %             s1 = (s1 - s1(s1_lastOnsetIndex))/(s1(s1_lastPeakIndex)-s1(s1_lastOnsetIndex));
    %             s2 = (s2 - s2(s2_firstEndPointIndex))/(s2(s2_firstPeakIndex)-s2(s2_firstEndPointIndex));
    %
    
    s1_reserved = s1(1:s1_lastValleyIndex);
    s2_reserved = s2(s2_firstValleyIndex+1:end);
    t = (1:(length(s1_reserved)+length(s2_reserved)))/125;
    ax(2) = subplot(1,2,2);
    plot(t(1:length(s1)),s1,'b');
    hold on;
    plot(t(length(s1_reserved)-s2_firstValleyIndex:length(s1_reserved)-s2_firstValleyIndex+length(s2)-1),s2,'k');
    plot(t([Segment.Labels.Valley(end),Segment.Labels.Valley(end)]),[0,1],'r--');
    legend('First PPG','Second PPG');
    title('(b)');
    ylim([-0.2,1.2]);
    xlim(t([400,800]));
    xlabel('Time (s)');
    ylabel('Amplitude');
end


function result = connectBasedOnPeak2(Segment,Segment2,type,loc)
    
    
    s1_lastPeakIndex = Segment.Labels.Peak(end);
    s1_OnsetReserved = Segment.Labels.Valley(Segment.Labels.Valley<s1_lastPeakIndex);
    s1_lastOnsetIndex = s1_OnsetReserved(end);
    s2_firstPeakIndex = Segment2.Labels.Peak(1);
    s2_EndpointReserved = Segment2.Labels.Valley(Segment2.Labels.Valley>s2_firstPeakIndex);
    s2_firstEndPointIndex = s2_EndpointReserved(1);
    %% normalize
    s1 = Segment.ppg;
    s2 = Segment2.ppg;
    %             s1 = (s1 - s1(s1_lastOnsetIndex))/(s1(s1_lastPeakIndex)-s1(s1_lastOnsetIndex));
    %             s2 = (s2 - s2(s2_firstEndPointIndex))/(s2(s2_firstPeakIndex)-s2(s2_firstEndPointIndex));
    %
    
    s1_reserved = s1(1:s1_lastPeakIndex);
    s2_reserved = s2(s2_firstPeakIndex+1:end);
    y = [s1_reserved(:);s2_reserved(:)]';
    if type == 1
        result.ppg = y;
    elseif type == 2
        %% with polyfit
        s1_constant = s1_reserved(end-9:end-5);
        s2_constant = s2_reserved(6:10);
        timePoints = [1:5 16:20];
        tSamples = 1:20;
        wayPoints = [s1_constant(:);s2_constant(:)]';
%         p = polyfit(timePoints,wayPoints,3);
%         y1 = polyval(p,tSamples);
        y1 = spline(timePoints,wayPoints,tSamples);
        [~,ia] = max(y1);
        y(length(s1_reserved)-9:length(s1_reserved)+10) = y1;
        stitchingPeak = length(s1_reserved)-9 + ia;
        result.ppg = y;
    end
    Segment.Labels.Peak= Segment.Labels.Peak(:);
    Segment.Labels.Valley = Segment.Labels.Valley(Segment.Labels.Valley<s1_lastPeakIndex);
    Segment2.Labels.Peak(1) = [];
    Segment2.Labels.Peak = Segment2.Labels.Peak - s2_firstPeakIndex  + length(s1_reserved);
    Segment2.Labels.Valley = Segment2.Labels.Valley(Segment2.Labels.Valley>s2_firstPeakIndex);
    Segment2.Labels.Valley = Segment2.Labels.Valley - s2_firstPeakIndex + length(s1_reserved);
    result.Labels.Peak = [Segment.Labels.Peak(1:end-1);stitchingPeak;Segment2.Labels.Peak(:)];
    result.Labels.Valley = [Segment.Labels.Valley(:);Segment2.Labels.Valley(:)];
    
    preValleys = result.Labels.Valley(result.Labels.Valley<length(s1_reserved));
    suffValleys = result.Labels.Valley(result.Labels.Valley>length(s1_reserved));
    
    result.previousbeat = result.ppg(preValleys(end-1):preValleys(end));
    result.stitchingbeat = result.ppg(preValleys(end):suffValleys(1));
    result.suffbeat = result.ppg(suffValleys(1):suffValleys(2));
    result.skewness.previousbeat = skewness(result.previousbeat);
    result.skewness.stitchingbeat = skewness(result.stitchingbeat);
    result.skewness.suffbeat = skewness(result.suffbeat);
    result.skewness.sum = result.skewness.previousbeat + result.skewness.stitchingbeat + result.skewness.suffbeat;
    subplot(3,2,2*loc-1);
    t = (1:length(y))/125;
    plot(t,y,'k');
    hold on;
    plot(t(preValleys(end-1):preValleys(end)),result.previousbeat,'c');
    plot(t([preValleys(end-1) preValleys(end-1)]),[-0.1 1.1],'k:');
    plot(t(preValleys(end):suffValleys(1)),result.stitchingbeat,'r');
    plot(t(suffValleys(1):suffValleys(2)),result.suffbeat,'m');
    plot(t([suffValleys(2) suffValleys(2)]),[-0.1 1.1],'k:');
%     plot(result.Labels.Peak,result.ppg(result.Labels.Peak),'b*');
    plot(t(stitchingPeak),result.ppg(stitchingPeak),'k*');
    text(t(Segment.Labels.Peak(end-1)),result.ppg(Segment.Labels.Peak(end-1))+0.1,[num2str(result.skewness.previousbeat,'%0.2f')],'HorizontalAlignment','center');
    text(t(stitchingPeak),result.ppg(stitchingPeak)+0.1,[num2str(result.skewness.stitchingbeat,'%0.2f')],'HorizontalAlignment','center');
    text(t(Segment2.Labels.Peak(1)),result.ppg(Segment2.Labels.Peak(1))+0.1,[num2str(result.skewness.suffbeat,'%0.2f')],'HorizontalAlignment','center');
    text((t(suffValleys(2))+ t(preValleys(end-1)))/2,-0.1,['{\it s}_1 = ' num2str(result.skewness.sum,'%0.2f')],'HorizontalAlignment','center');
    xlabel('Time (s)');
    ylabel('Amplitude');
    ylim([-0.2,1.2]);
    xlim([0 t(end)]);
    
    
end



function result = connectBasedOnValley2(Segment,Segment2,type,loc)
    
    
    s1_lastValleyIndex = Segment.Labels.Valley(end);
    s2_firstValleyIndex = Segment2.Labels.Valley(1);
    %% normalize
    s1 = Segment.ppg;
    s2 = Segment2.ppg;
    %             s1 = (s1 - s1(s1_lastOnsetIndex))/(s1(s1_lastPeakIndex)-s1(s1_lastOnsetIndex));
    %             s2 = (s2 - s2(s2_firstEndPointIndex))/(s2(s2_firstPeakIndex)-s2(s2_firstEndPointIndex));
    %
    
    s1_reserved = s1(1:s1_lastValleyIndex);
    s2_reserved = s2(s2_firstValleyIndex+1:end);
    y = [s1_reserved(:);s2_reserved(:)]';
    if type == 1
        result.ppg = y;
    elseif type == 2
        %% with polyfit
        s1_constant = s1_reserved(end-9:end-5);
        s2_constant = s2_reserved(6:10);
        timePoints = [1:5 16:20];
        tSamples = 1:20;
        wayPoints = [s1_constant(:);s2_constant(:)]';
        %% cubic polyfit
%         p = polyfit(timePoints,wayPoints,3);
%         y1 = polyval(p,tSamples);
        y1 = spline(timePoints,wayPoints,tSamples);
        [~,ia] = min(y1);
        y(length(s1_reserved)-9:length(s1_reserved)+10) = y1;
        stithcingValley = length(s1_reserved)-9 + ia;
        result.ppg = y;
        
        
%         figure;
%          s = spline(timePoints,wayPoints,tSamples);
%          plot(s,'r');
%          hold on
%          plot(y1,'k');
%          legend('spline','polyfit');
         
    end
    
    Segment.Labels.Peak = Segment.Labels.Peak(Segment.Labels.Peak<s1_lastValleyIndex);
    Segment.Labels.Valley = Segment.Labels.Valley(:);
    Segment2.Labels.Peak = Segment2.Labels.Peak(Segment2.Labels.Peak>s2_firstValleyIndex);
    Segment2.Labels.Peak = Segment2.Labels.Peak - s2_firstValleyIndex  + length(s1_reserved);
    Segment2.Labels.Valley(1) = [];
    Segment2.Labels.Valley = Segment2.Labels.Valley - s2_firstValleyIndex + length(s1_reserved);
    
    result.Labels.Peak = [Segment.Labels.Peak(:);Segment2.Labels.Peak(:)];
    result.Labels.Valley = [Segment.Labels.Valley(1:end-1);stithcingValley;Segment2.Labels.Valley(:)];
    
    preValleys = result.Labels.Valley(result.Labels.Valley<stithcingValley);
    suffValleys = result.Labels.Valley(result.Labels.Valley>stithcingValley);
    
    result.previousbeat = result.ppg(preValleys(end):stithcingValley);
    result.stitchingbeat = result.ppg(stithcingValley:suffValleys(1));
    result.suffbeat = result.ppg(suffValleys(1):suffValleys(2));
    result.skewness.previousbeat = skewness(result.previousbeat);
    result.skewness.stitchingbeat = skewness(result.stitchingbeat);
    result.skewness.suffbeat = skewness(result.suffbeat);
    result.skewness.sum = result.skewness.previousbeat + result.skewness.stitchingbeat + result.skewness.suffbeat;
    t = (1:length(y))/125;
    subplot(3,2,2*loc);
    plot(t,y,'k');
    hold on;
    plot(t(preValleys(end):stithcingValley),result.previousbeat,'c');
    plot(t([preValleys(end) preValleys(end)]),[-0.1 1.1],'k:');
    plot(t(stithcingValley:suffValleys(1)),result.stitchingbeat,'r');
    plot(t(suffValleys(1):suffValleys(2)),result.suffbeat,'m');
    plot(t(stithcingValley),result.ppg(stithcingValley),'k+');
    plot(t([suffValleys(2) suffValleys(2)]),[-0.1 1.1],'k:');
    text(t(Segment.Labels.Peak(end)),result.ppg(Segment.Labels.Peak(end))+0.1,[num2str(result.skewness.previousbeat,'%0.2f')],'HorizontalAlignment','center');
    text(t(Segment2.Labels.Peak(1)),result.ppg(Segment2.Labels.Peak(1))+0.1,[num2str(result.skewness.stitchingbeat,'%0.2f')],'HorizontalAlignment','center');
    text(t(Segment2.Labels.Peak(2)),result.ppg(Segment2.Labels.Peak(2))+0.1,[num2str(result.skewness.suffbeat,'%0.2f')],'HorizontalAlignment','center');
    text((t(suffValleys(2))+ t(preValleys(end)))/2,-0.1,['{\it s}_2 = ' num2str(result.skewness.sum,'%0.2f')],'HorizontalAlignment','center');
    ylim([-0.2,1.2]);
    xlim([0 t(end)]);
    xlabel('Time (s)');
    ylabel('Amplitude');
    
end